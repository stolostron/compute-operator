---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: registeredclusters.singapore.open-cluster-management.io
spec:
  group: singapore.open-cluster-management.io
  names:
    kind: RegisteredCluster
    listKind: RegisteredClusterList
    plural: registeredclusters
    singular: registeredcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.apiURL
      name: Cluster URL
      type: string
    - jsonPath: .status.conditions[?(@.type=="ManagedClusterJoined")].status
      name: Joined
      type: string
    - jsonPath: .status.conditions[?(@.type=="ManagedClusterConditionAvailable")].status
      name: Available
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RegisteredCluster represents the desired state and current status
          of registered cluster. The name is the cluster UID.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RegisteredClusterSpec defines the desired state of RegisteredCluster
            properties:
              location:
                description: kcp workspaces where SyncTarget will be created
                items:
                  type: string
                type: array
            type: object
          status:
            description: RegisteredClusterStatus defines the observed state of RegisteredCluster
            properties:
              allocatable:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Allocatable represents the total allocatable resources
                  on the registered cluster.
                type: object
              apiURL:
                description: ApiURL the URL of apiserver endpoint of the registered
                  cluster.
                type: string
              capacity:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Capacity represents the total resource capacity from
                  all nodeStatuses on the registered cluster.
                type: object
              clusterClaims:
                description: ClusterClaims represents cluster information that a registered
                  cluster claims, for example a unique cluster identifier (id.k8s.io)
                  and kubernetes version (kubeversion.open-cluster-management.io).
                  They are written from the registered cluster. The set of claims
                  is not uniform across a fleet, some claims can be vendor or version
                  specific and may not be included from all registered clusters.
                items:
                  description: ManagedClusterClaim represents a ClusterClaim collected
                    from a managed cluster.
                  properties:
                    name:
                      description: Name is the name of a ClusterClaim resource on
                        managed cluster. It's a well known or customized name to identify
                        the claim.
                      maxLength: 253
                      minLength: 1
                      type: string
                    value:
                      description: Value is a claim-dependent string
                      maxLength: 1024
                      minLength: 1
                      type: string
                  type: object
                type: array
              clusterID:
                description: ClusterID uniquely identifies this registered cluster
                type: string
              clusterSecretRef:
                description: ClusterSecretRef is a reference to the secret containing
                  the registered cluster kubeconfig.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              conditions:
                description: Conditions contains the different condition statuses
                  for this RegisteredCluster.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              importCommandRef:
                description: ImportCommandRef is reference to configmap containing
                  import command.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              version:
                description: Version represents the kubernetes version of the registered
                  cluster.
                properties:
                  kubernetes:
                    description: Kubernetes is the kubernetes version of managed cluster.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
